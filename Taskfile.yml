version: "3"

################################################################################################
#
# ref:
#   - https://taskfile.dev/#/usage
#
################################################################################################

#
# sub namespace: https://taskfile.dev/#/usage?id=including-other-taskfiles
#
includes:
  os:
    taskfile: ./taskfile/Taskfile_{{OS}}.yml
    dir: ./taskfile/

  base:
    taskfile: ./taskfile/Taskfile_base.yml
    dir: ./taskfile/

  go:
    taskfile: ./taskfile/Taskfile_base_go.yml
    dir: ./taskfile/

  flutter:
    taskfile: ./taskfile/Taskfile_base_flutter.yml
    dir: .

  rust:
    taskfile: ./taskfile/Taskfile_base_rust.yml
    dir: ./taskfile/

  zig:
    taskfile: ./taskfile/Taskfile_base_zig.yml
    dir: ./taskfile/

  python:
    taskfile: ./taskfile/Taskfile_base_python.yml
    dir: ./taskfile/

  # typescript / javascript / nodejs
  ts:
    taskfile: ./taskfile/Taskfile_base_typescript.yml
    dir: ./taskfile/

  git:
    taskfile: ./taskfile/Taskfile_infra_git.yml
    dir: ./taskfile/

  nvim:
    taskfile: ./taskfile/Taskfile_infra_nvim.yml
    dir: ./taskfile/
    ignore_error: true

  vim:
    taskfile: ./taskfile/Taskfile_infra_nvim.yml
    dir: ./taskfile/
    ignore_error: true

  docker:
    taskfile: ./taskfile/Taskfile_infra_docker.yml
    dir: ./taskfile/

  compose:
    aliases: [ 'dc', "docker-compose" ]
    taskfile: ./docker-compose/local/
    dir: ./docker-compose/local/
    optional: true



################################################################################################

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

#
# global env: https://taskfile.dev/#/usage?id=environment-variables
#
env:
  ENV1: testing-env

# env file:
#dotenv:
#  - .env

################################################################################################

# task groups:
tasks:
  default:
    cmds:
      - task: echo

  download:
    cmds:
      - chmod +x init.sh
      - ./init.sh

  init:
    cmds:
      - cp .env.local .env

  echo:
    cmds:
      - echo "hello world"

  # update itself:
  update:
    cmds:
      - curl -fsSL https://raw.githubusercontent.com/better-sre/config/main/init.sh | sh

  up:infra:
    cmds:
      - task: docker:local:up:mysql
      - task: docker:local:up:redis
      - task: docker:local:up:consul:v3 # 服务发现/服务注册
      - task: docker:local:up:jaeger # 链路追踪 # https://go-kratos.dev/docs/component/middleware/tracing
  #      - task: std:docker:local:up:prometheus

  ################################################################################################

  use:
    cmds:
      - echo "setup user global taskfile root dir >> {{.TASK_ROOT_DIR}}"
      - mkdir -p {{.TASK_ROOT_DIR}}
      - echo "current dir >> $(pwd)"
      - ln -sf $(pwd)/ {{.TASK_ROOT_DIR}} # link dir:
      - ls -al {{.TASK_ROOT_DIR}}
      - open {{.TASK_ROOT_DIR}}
    vars:
      TASK_ROOT_DIR: "~/.task/local/"
    ignore_error: true


  ################################################################################

  #
  # 验证 nats 部署正常:
  #
  test:nats:sub:
    cmds:
      - go run sub/main.go
    dir: ./script/nats/

  test:nats:pub:
    cmds:
      - go run pub/main.go
    dir: ./script/nats/

  #
  # unit test for this project:
  #
  test:
    cmds:
      - task --dry os:install:go-task

  tests:
    cmds:
      - task --dry os:init
      - task --dry rust:init


  ################################################################################

  pull:
    aliases: [ "pl" ]
    cmds:
      - git config pull.rebase false
      - git pull origin main

  fetch:
    aliases: [ "f" ]
    cmds:
      - git fetch
      - git rebase
      - git merge origin/main

  quick:
    aliases: [ "q" ]
    cmds:
      - task: commit
      - task: commit
      #      - task: pull
      - task: push

  commit:
    aliases: [ "c" ]
    cmds:
      - git add .
      - |
        git commit -m 'chore: update' --no-verify
    ignore_error: true

  push:
    aliases: [ "p" ]
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url

